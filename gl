#! /usr/bin/env python
# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# Copyright (c) 2014, Nicolas P. Rougier. All rights reserved.
# Distributed under the terms of the new BSD License.
# -----------------------------------------------------------------------------
import sys
import ctypes
import numpy as np
import OpenGL.GL as gl
import OpenGL.GLUT as glut
import math
import transforms
import time
import fbo
import geometry.simple
import geometry.video
import geometry.ws2811

preview = False
raw = False

start = time.time()

def render():
    global start, circle, vid
    
    t = time.time() - start

    gl.glClearColor(0, 0, 0, 0)    
    gl.glClear(gl.GL_COLOR_BUFFER_BIT)
    
    model = np.eye(4, dtype=np.float32)
    transforms.translate(model, math.sin(0.5*t*math.pi*2) * 5, 0, 0)

    projection = np.eye(4, dtype=np.float32)
    transforms.scale(projection, .2, 1, 1)

    circle.setModelView(model)
    circle.setProjection(projection)
#    circle.render()
    
    vid.render()


def display():
    global mainfbo
    global texquad
    
    if raw:
        render()
    else:
        with mainfbo:
            render()

        gl.glClearColor(0, 0, 0, 0)
        gl.glClear(gl.GL_COLOR_BUFFER_BIT)
        
        if preview:   
            texquad.render()
        else:
            signalgenerator.render()
                
    glut.glutSwapBuffers()
    glut.glutPostRedisplay()
    
def reshape(width,height):
    gl.glViewport(0, 0, width, height)

def keyboard( key, x, y ):
    if key == '\033':
        sys.exit( )


# GLUT init
# --------------------------------------
glut.glutInit()
glut.glutInitDisplayMode(glut.GLUT_DOUBLE | glut.GLUT_RGBA)
glut.glutCreateWindow('Amazing ws2811 VGA renderer')
if preview or raw:
    glut.glutReshapeWindow(1500,300)
else:
    glut.glutReshapeWindow(840,1000)
glut.glutReshapeFunc(reshape)
glut.glutDisplayFunc(display)
glut.glutKeyboardFunc(keyboard)

circle = geometry.simple.circle()
vid = geometry.video.video('test2.mp4')

M = np.eye(4, dtype=np.float32)
transforms.scale(M, 2, 6, 1)
transforms.translate(M, 0, -1, 0)
vid.setModelView(M)

mainfbo = fbo.FBO(512, 128)
texquad = geometry.simple.texquad()
texquad.setTexture(mainfbo.getTexture())

signalgenerator = geometry.ws2811.signalgenerator()
signalgenerator.setTexture(mainfbo.getTexture())

# Enter mainloop
# --------------------------------------
if not raw and not preview:
    glut.glutFullScreen()
glut.glutMainLoop()
